name: Matrix test application
on:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BUILD_CASE:
          - virus_disabled
          - virus_enabled
          - relayhost
          - fts_disabled
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Prepare environment
        run: |
          make .env
          cat .github/test-matrix/${{ matrix.BUILD_CASE }}.env >> .env
      - name: Add WAITSTART_TIMEOUT variable in .env with 10m
        run: echo "WAITSTART_TIMEOUT=10m" >> .env
      - name: Output environment
        run: cat .env
      - name: Pull and build images
        run: |
          export BUILDX_BUILDER=${{ steps.buildx.outputs.name }}
          make build
      - name: Start docker-mailserver services
        run: bin/production.sh up -d
      - name: Load database fixtures
        run: make fixtures
      - name: Run tests
        run: |
          export BUILDX_BUILDER=${{ steps.buildx.outputs.name }}
          bin/test.sh run --rm test
      - name: Collect logs
        if: failure()
        run: |
          make logs
          docker ps -a
  test_build_unofficial_sigs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Build Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: virus/contrib/unofficial-sigs
          platforms: linux/amd64,linux/arm64
          push: false
          tags: virus-unofficial-sigs:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  lint_files:
    permissions:
      contents: read
      packages: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter@v7.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SQLFLUFF: false
          VALIDATE_JSCPD: false
          VALIDATE_PHP_PSALM: false
          VALIDATE_PHP_PHPCS: false
          VALIDATE_CHECKOV: false
          FIX_SHELL_SHFMT: false
          FIX_YAML_PRETTIER: false
  validate_renovate_config:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            renovate.json
          sparse-checkout-cone-mode: false
      - name: Run renovate-config-validator
        run: npx --yes --package renovate -- renovate-config-validator
